name: Build and deploy Node.js app to Azure Web App - frommchile

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: 'production'
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SHADOW_DATABASE_URL: ${{ secrets.SHADOW_DATABASE_URL }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - name: npm install and check Prisma setup
        run: |
          npm install -g @nestjs/cli
          npm install
          npx prisma generate
          npm run build --if-present
          # npm run test --if-present 

      - name: Zip artifact for deployment
        run: zip -r release.zip dist package.json .env prisma package-lock.json tsconfig.json

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
    env:
      NODE_ENV: 'production'
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SHADOW_DATABASE_URL: ${{ secrets.SHADOW_DATABASE_URL }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_88CFB899879C4F19BBC76F6E77CE556D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_812E43022BCB42C1B93200EAAD15F905 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_A231B51DE1A34E799DEA6B477543AB60 }}

      - name: 'Clean up wwwroot directory with Bash'
        uses: azure/cli@v2
        with:
          azcliversion: 2.30.0
          inlineScript: |
            echo "Conectando al contenedor y limpiando el directorio wwwroot..."
            az webapp ssh --name 'frommchile' --resource-group 'nestjsapps' --command "rm -rf /home/site/wwwroot/*"
            echo "Directorio wwwroot limpiado."

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'frommchile'
          slot-name: 'Production'
          package: .
